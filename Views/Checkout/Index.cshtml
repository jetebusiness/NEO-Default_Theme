@model DomainCheckout.Entities.Cart


@{
    ViewBag.Title = "Carrinho de Compras";
    Layout = "~/Views/Shared/Base/_LayoutCheckout.cshtml";
    bool permiteVenda = true;

    DomainCompany.Entities.PayPal payPal = LojaCorp.Control.Company._Company.PayPal;
    string ClientId = "";
    string ButtonFormat = "rect";
    string ButtonColor = "gold";
    string Env = "sandbox";
    bool Active = false;
    string RecoverCartErrorMsg = TempData["RecoverCartError"] != null ? TempData["RecoverCartError"].ToString() : null;
    bool ShowAlert = TempData["HasCartItens"] != null ? Convert.ToBoolean(TempData["HasCartItens"]) : false;
    string hashAbandonedCart = Session["HashAbandonedCart"] != null ? Session["HashAbandonedCart"].ToString() : null;
    bool IsRecurrent = false;


    if (payPal != null && payPal.Active)
    {
        Active = payPal.UseCheckoutCart;
        ClientId = payPal.ClientId;
        ButtonFormat = payPal.ButtonFormat;
        ButtonColor = payPal.ButtonColor;

        if (payPal.Homologation == false)
        {
            Env = "production";
        }
    }

    string discountKey = Request.Cookies["DiscountKeyCart"] != null
    ? Request.Cookies["DiscountKeyCart"].Value
    : "";

    ViewData["DiscountKeyCart"] = discountKey;
}
@section logo {
    <a href="/home" title="@LojaCorp.Control.Company._Company.FantasyName">
        <img class="ui middle aligned image logo" src="~/assets/image/logo/logo.png" />
    </a>
}
@if (ShowAlert)
{
    @section custom_js{
        <script>
            $(document).ready(function () {
                swal({
                    text: 'Você já possui itens em seu carrinho, caso atualize com os produtos do link, os itens de seu carrinho serão removidos. Deseja atualizar o carrinho?',
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#16ab39',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sim',
                    cancelButtonText: 'Não'
                }).then(function (result) {
                    if (!result) {
                        return;
                    }
                    $.ajax({
                        method: "POST",
                        url: "/Checkout/recoverCart/@hashAbandonedCart",
                        success: function (response) {
                            if (response.Success === true) {
                                window.location.href = "/checkout/index";
                            }
                            else {
                                swal({
                                    text: response.StatusMessage,
                                    type: "error",
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: 'OK'
                                })
                            }
                        },
                        error: function () {
                            swal({
                                text: "Ocorreu um erro ao recuperar o carrinho",
                                type: "error",
                                showCancelButton: false,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'OK'
                            })
                        }
                    });
                });
            })
        </script>
    }
}
<div class="ui container">
    <div class="ui two column grid stackable middle aligned">
        <div class="row">
            <div class="column ui ten wide computer six wide tablet">
                <h1 class="meu-carrinho">@(Session["idEventList"] == null && Session["EventList"] == null ? "Meu Carrinho" : "Minha Lista")</h1>
            </div>
            <div class="column ui six wide computer ten wide tablet">

                @if (Session["UserAuthenticated"] != null && Session["Seller"] != null)
                {
                    if (((DomainCustomer.Entities.Customer)Session["UserAuthenticated"]).User.UserName != null)
                    {
                        <!-- Comeco Venda Assistida (Com Cliente) -->
                        <div class="ui two column grid stackable middle aligned venda-assistida">
                            <div class="row">
                                <div class="column">
                                    <div class="info">
                                        <div class="ui items">
                                            <div class="item">
                                                <div class="cliente-vinculado">
                                                    <i class="user circle outline icon"></i> <span>Cliente</span>
                                                </div>
                                                <div class="content align-self-center">
                                                    <div class="header">@Html.Raw(((DomainCustomer.Entities.Customer)Session["UserAuthenticated"]).Name.ToString())</div>
                                                    <div class="description">
                                                        <p>@Html.Raw(((DomainCustomer.Entities.Customer)Session["UserAuthenticated"]).Email.ToString())</p>
                                                        <p>
                                                            CPF:
                                                            @{
                                                                string CpfCnpj = ((DomainCustomer.Entities.Customer)Session["UserAuthenticated"]).Cpf_cnpj;

                                                                if (!CpfCnpj.Contains("*"))
                                                                {
                                                                    CpfCnpj = Convert.ToUInt64(CpfCnpj).ToString(@"000\.000\.000\-00");
                                                                }
                                                            }
                                                            @CpfCnpj
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="column middle aligned">
                                    <a href="/assistedsale/index" class="ui black button position-button">
                                        Alterar o cliente
                                    </a>
                                </div>
                            </div>
                        </div>
                        <!-- Fim Venda Assistida -->
                    }
                }
                @if (Session["Seller"] != null && ((DomainCustomer.Entities.Customer)Session["UserAuthenticated"]).Name == null)
                {
                    permiteVenda = false;
                    <!-- Comeco Venda Assistida (Sem Cliente) -->
                    <div class="ui two column grid stackable middle aligned venda-assistida">
                        <div class="row">
                            <div class="column">
                                <div class="info">
                                    <div class="ui items">
                                        <div class="item">
                                            <div class="cliente-vinculado">
                                                <i class="user circle outline icon"></i> <span>Cliente</span>
                                            </div>
                                            <div class="content align-self-center">
                                                <div class="header">Sem cliente vinculado</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="column middle aligned">
                                <a href="/assistedsale/index" class="ui black button position-button">
                                    <i class="user plus icon"></i> Vincular cliente
                                </a>
                            </div>
                        </div>
                    </div>
                    <!-- Fim Venda Assistida -->
                }
                <input type="hidden" id="permiteVenda" value="@permiteVenda.ToString()" />
            </div>
        </div>
        <div class="ui clearing divider"></div>
    </div>

    <div class="ui grid horizontal" id="ListProductsCheckoutCompleto">
        @if (Session["MsgCartHash"] != null)
        {
            <input type="hidden" name="MsgCartHash" id="MsgCartHash" value="@Session["MsgCartHash"]" />
            Session["MsgCartHash"] = null;
        }
        <div class="row">

            @if (Model != null && Model.CartItems != null)
            {
                <div class="column ten wide computer sixteen wide tablet sixteen wide mobile detalhes produtos">
                    <div class="ui divided items relaxed cart" id="checkout_products_list_cart">
                        @if (Model != null && Model.CartItems != null)
                        {
                            IsRecurrent = Model.CartItems.FirstOrDefault().IsRecurrent;
                            foreach (var product in Model.CartItems.OrderByDescending(c => c.IdCartItem))
                            {
                                <!-- Page: ~/Views/Shared/Object/Product/_ProductCartItem.cshtml -->
                                @Html.Partial("~/Views/Shared/Object/Product/_ProductCartItem.cshtml", product)
                            }
                        }
                    </div>
                </div>
                <div class="column six wide computer sixteen wide tablet sixteen wide mobile right aligned detalhes compra">
                    <div class="ui sticky box detalhes">
                        <div class="ui divided items">
                            <div class="item detalhes">
                                <div class="content">
                                    <div class="description">
                                        Desconto: <span id="descontoCarrinho">@string.Format("{0:c}", Model != null ? Model.TotalDiscount : 0)</span>
                                    </div>
                                </div>
                            </div>
                            <div class="item detalhes">
                                <div class="content">
                                    <div class="description">
                                        <strong>Subtotal: <span id="subTotalCarrinho">@string.Format("{0:c}", Model != null ? Model.SubTotal : 0)</span></strong>
                                    </div>
                                </div>
                            </div>
                            <div class="item detalhes">
                                <div class="content">
                                    <div class="description frete">
                                        <div class="ui form right floated ">
                                            <div class="inline fields margin none">
                                                <div class="field padding none">
                                                    <label>Calcular Frete</label>
                                                    <div class="ui action input">
                                                        <input type="text" placeholder="00000-000"
                                                               class="masked mask_zipcode" size="9" name="shipping"
                                                               value="@Model.ZipCode"
                                                               id="shipping">
                                                        <button class="ui right labeled icon button frete calcular" id="CallServiceShipping">
                                                            <i class="shipping icon"></i>
                                                            Calcular
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="description resultado" id="exibeFrete">
                                        <div class="ui form right floated ">
                                            <div class="field">
                                                <div class="ui left div-frete-retira-cart">
                                                    <button name="frete-receber-cart" id="frete-receber-cart" class="ui button fs basic">Receber</button>
                                                    <button name="frete-retirar-cart" id="frete-retirar-cart" class="ui button sc basic">Retirar</button>
                                                    <input type="hidden" id="hdnRetirarCart" value="false" />
                                                </div>
                                                <label class="frete valor" id="loadFrete"></label>
                                                <div class="ui">
                                                    <button class="ui right labeled icon mini button frete recalcular margin none" id="btn_recalcular_frete">
                                                        <i class="refresh icon"></i>
                                                        Recalcular
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="item detalhes hideme" id="dica_frete">
                                <div class="content">
                                    <span id="descricao_dica"></span>
                                </div>
                            </div>

                            @if (!IsRecurrent)
                            {
                                @* Cupom de desconto de carrinho/mini carrinho *@
                                @Html.Partial("~/Views/Shared/Common/_DiscountCartPartial.cshtml")
                            }

                            <div class="item detalhes">
                                <div class="content">
                                    <div class="description">
                                        <h3>Total a pagar: <span id="totalCarrinho">@string.Format("{0:c}", Model != null ? Model.Total : 0)</span></h3>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="ui divider"></div>

                        @* Compra Recorrente: Frequencia *@
                        @Html.Partial("~/Views/Shared/Blocks/RecurringPurchase/_DeliveryFrequency.cshtml", Model)

                        <div class="ui grid">
                            <div class="row one column">
                                <div class="column">
                                    <button id="finalizePurchase" class="ui animated button fluid large submit action"
                                            tabindex="0">
                                        <div class="visible content">Finalizar Compra</div>
                                        <div class="hidden content">
                                            <i class="right arrow icon"></i>
                                        </div>
                                    </button>
                                    @if (Active)
                                    {
                                        <input type="hidden" name="EnvPayPallCheckoutInCart" id="EnvPayPalCheckoutInCartlCheckoutInCart" value="@Env" />
                                        <input type="hidden" name="ButtonColorPayPalCheckoutInCart" id="ButtonColorPayPalCheckoutInCart" value="@ButtonColor" />
                                        <input type="hidden" name="ButtonFormatPayPalCheckoutInCart" id="ButtonFormatPayPalCheckoutInCart" value="@ButtonFormat" />

                                        <script src="https://www.paypal.com/sdk/js?client-id=@ClientId&currency=BRL&commit=false"></script>

                                        <div class="ui horizontal divider">
                                            <span class="text medium">ou</span>
                                        </div>

                                        <div id="paypal-button-container-incart" class="buttonsMiniCart paypalBtn" data-container="checkout_products_list_cart"></div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <button class="ui button basic tiny"
                        id="ClearCart" tabindex="0">
                    Limpar Carrinho
                </button>

                @* Compra Recorrente: Termo de Aceite *@
                @Html.Partial("~/Views/Shared/Blocks/RecurringPurchase/_Terms.cshtml")

                @section remarketing {
                    <!-- Google Remarketing -->
                    @Html.Action("googleRemarketing", "common", new { origin = ViewContext.RouteData.Values["controller"] })
                    <!-- End Google Remarketing -->
                }
            }
            else if (!string.IsNullOrEmpty(RecoverCartErrorMsg))
            {
                <div class="ten wide computer sixteen wide tablet sixteen wide mobile column">
                    @RecoverCartErrorMsg
                </div>
            }
            else
            {
                <div class="ten wide computer sixteen wide tablet sixteen wide mobile column">
                    Carrinho Vazio
                </div>
            }
        </div>
    </div>
</div>
