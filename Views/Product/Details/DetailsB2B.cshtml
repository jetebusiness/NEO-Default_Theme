@model ViewModels.Produto.DetalhesB2BViewModel
@{

    List<DomainProduct.Entities.ProductRating> lista_avaliacoes_completa = new List<DomainProduct.Entities.ProductRating>();
    if (Model.ProductRatings.Count > 5)
    {
        lista_avaliacoes_completa.AddRange(Model.ProductRatings);
        lista_avaliacoes_completa.RemoveRange(0, 5);
    }

    var usaOneClick = ViewBag.UseOneClickMaxiPago != null ? ViewBag.UseOneClickMaxiPago : false;

    //GRADE ABERTA B2C
    var hasOpenSku = ViewBag.HasOpenSku != null ? ViewBag.HasOpenSku : false;

    string PathLogo = "/assets/image/logo/logo.png";

    Uri Url = System.Web.HttpContext.Current.Request.Url;

    string UrlLogo = Url.Scheme + "://" + Url.Host + PathLogo;

    var firstImageWithVideoNull = Model.ProductImages.FirstOrDefault(image => image.Video == null);
    string ImagemDefault = firstImageWithVideoNull?.ImageDefault.ToString();

    string ImageOpenGraph = Model.ProductImages.Count > 0 ? Url.Scheme + ":" + Model.ProductImages.FirstOrDefault().ImageDefault : UrlLogo;
}

<script>
    var total_avaliacoes_produto = @(Model.ProductRatings != null ? Model.ProductRatings.Count : 0);
    var lista_avaliacao_produto = @(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(lista_avaliacoes_completa)));
</script>
@{
    ViewBag.Title = string.IsNullOrEmpty(Model.Title) ? Model.Name : Model.Title;
    Layout = "~/Views/Shared/Base/_LayoutBreadCrumb.cshtml";
}
@section remarketing{
    <!-- Google Remarketing -->
    @Html.Action("googleRemarketing", "common", new { origin = ViewContext.RouteData.Values["controller"] })
    <!-- End Google Remarketing -->
}
@section CustomSeo {
    @{
        if (!String.IsNullOrEmpty(Model.MetaDescription))
        {
            <meta name="Description" content="@Model.MetaDescription">
        }

        if (!String.IsNullOrEmpty(Model.MetaKeyWords))
        {
            <meta name="Keywords" content="@Model.MetaKeyWords">
        }

        <meta property="og:image" content="@ImageOpenGraph" />
    }
}

@{
    string ListaImagens = string.Empty;
    string ListaSKU = string.Empty;
    string AvailableReferences = string.Empty;
    string variacaoSelecionada = string.Empty;
    string skuSelecionado = string.Empty;
    var breadcrumb = new List<LojaCorp.Control.BreadcrumbList>();

    if (Model.Categories != null)
    {
        breadcrumb = LojaCorp.Control.BreadcrumbProduct.GetBreadcrumCategories(Model.Categories);
    }

    if (Model.ProductImages != null)
    {
        ListaImagens = Newtonsoft.Json.JsonConvert.SerializeObject(Model.ProductImages);
    }

    if (Model.SKUs != null)
    {
        ListaSKU = Newtonsoft.Json.JsonConvert.SerializeObject(Model.SKUs);
    }

    if (Model.AvailableReferences != null)
    {
        AvailableReferences = Newtonsoft.Json.JsonConvert.SerializeObject(Model.AvailableReferences);
    }


    if (Model.AvailableReferences != null && Model.AvailableReferences.Count > 0)
    {
        foreach (var referencias in Model.AvailableReferences.OrderBy(o => o.OrdinationOfReferences).ToList())
        {
            foreach (var variacoes in referencias.Variations)
            {
                if (Model.SKUPadrao.Variations.FindAll(r => r.IdVariation == variacoes.IdVariation).Count > 0)
                {
                    var referencia_selecionada = Model.SKUPadrao.Variations.FindAll(r => r.IdVariation == variacoes.IdVariation);
                    variacaoSelecionada += referencias.IdReference.ToString() + '-' + referencia_selecionada.FirstOrDefault().IdVariation.ToString() + ',';
                }
            }
        }

        string character = variacaoSelecionada.Substring(variacaoSelecionada.Length - 1);
        if (character == ",")
        {
            variacaoSelecionada = variacaoSelecionada.Remove(variacaoSelecionada.Length - 1);
        }
    }


    if (Model.SKUPadrao.InstallmentMax == null)
    {
        Model.SKUPadrao.InstallmentMax = new DomainProduct.Entities.InstallmentMax();
        Model.SKUPadrao.InstallmentMax.MaxNumber = 0;
        Model.SKUPadrao.InstallmentMax.Value = 0;
    }
}

@section breadcrumbs {
    <div class="ui two column centered grid stackable middle aligned">
        <div class="container">
            <div class="column">
                <div class="ui breadcrumb margin top medium">
                    <a class="section" href=""></a>

                    @if (breadcrumb != null)
                    {
                        <a class="section" href="/">Home</a>
                        foreach (var item in breadcrumb)
                        {
                            <i class="right angle icon divider"></i>
                            <a class="section" href="@item.Link">@item.CategorieName</a>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="ui divider"></div>
}

<div id="fb-root"></div>
<script>
    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/pt_BR/sdk.js#xfbml=1&version=v2.10&appId=656083874584141";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));</script>
<!-- Posicione esta tag no cabeçalho ou imediatamente antes da tag de fechamento do corpo. -->
<script src="https://apis.google.com/js/platform.js" async defer>
    { lang: 'pt-BR' }
</script>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
<!-- COMEÇO - Váriaveis Produto Principal-->
<input type="hidden" id="produto-id" name="produto-id" value="@Model.IdProduct" />
<input type="hidden" id="produto-stock" name="produto-stock" value="@Model.Stock" />
<input type="hidden" id="produto-sku" name="produto-sku" value="@Model.SKUPadrao.IdSku" />
<input type="hidden" id="produto-codigo" name="produto-codigo" value="@Model.Code" />
<input type="hidden" id="lista-imagens-slide" name="lista-imagens-slide" value="@ListaImagens" />
<input type="hidden" id="principal-total-variacoes" name="principal-total-variacoes" value="@(Model.AvailableReferences != null ? Model.AvailableReferences.Count() : 0) " />
<input type="hidden" id="principal-lista-sku" name="principal-lista-sku" value="@ListaSKU" />
<input type="hidden" id="principal-referencias-selecionadas" name="principal-referencias-selecionadas" value="@variacaoSelecionada" />
<input type="hidden" id="variacoesSelecionadas" value="" />
<input type="hidden" id="has-open-sku" value="@((hasOpenSku == true)? "true" : "false")" />
<input type="hidden" id="b2b" value="true" />

<!-- FIM - Váriaveis Produto Principal-->
<!-- COMEÇO - Váriaveis Produto Unitário-->
<input type="hidden" value="@Model.Price" id="preco-unidade" name="preco-unidade" />
<input type="hidden" value="@Model.PricePromotion" id="preco-promocao-unidade" name="preco-promocao-unidade" />
@if (Model.InstallmentMax != null)
{
    <input type="hidden" value="@Model.InstallmentMax.Value" id="parcela-maxima-unidade" name="parcela-maxima-unidade" />
    <input type="hidden" value="@Model.InstallmentMax.MaxNumber" id="qtd-parcela-maxima-unidade" name="qtd-parcela-maxima-unidade" />
    <input type="hidden" value="@Model.InstallmentMax.Description" id="pagamento-descricao" name="pagamento-descricao" />
}
<input type="hidden" value="@AvailableReferences" id="principal-produto-referecias" name="principal-produto-referecias" />
<input type="hidden" value="@ViewBag.DescontoBoleto" id="desconto_boleto" name="desconto_boleto" />
<!-- FIM - Váriaveis Produto Unitário-->
<div class="ui container" itemscope itemtype="http://schema.org/Product">
    <meta itemprop="description" content="">
    <meta itemprop="image" content="@ImagemDefault">
    <link itemprop="url" href="" rel="author" />
    <div class="ui grid stackable produto">
        <div class="row product information one column">

            <!-- COMEÇO MARCA MOBILE-->
            <div class="mobile only column">
                <h1 itemprop="name" class="nomeProduto" id="produto-nome">@Model.Name</h1>
                @if (Model.Brand != null)
                {
                    <h5 itemprop="productBrand" class="marcaProduto">@Model.Name</h5>
                }
                else
                {
                    <h5 itemprop="productBrand" class="marcaProduto"></h5>
                }
                <!-- FIM MARCA MOBILE-->
                <div class="ui two column grid">
                    <div class="column">
                        <h6 itemprop="productID" class="codProduto">@Model.Code</h6>
                    </div>
                    <div class="column">
                        <div class="avaliacoes">
                            <div class="ui tiny star rating" data-rating="@Model.Rate.Value.ToString().Replace(",", ".")"></div>
                            @if (Model.ProductRatings != null)
                            {
                                <span>0 avaliações</span>
                            }
                            else if (Model.ProductRatings.Count() == 1)
                            {
                                <span>1 avaliação</span>
                            }
                            else
                            {
                                <span>@Model.ProductRatings.Count() avaliações</span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row detalhes produto">
            <!-- FIM IMAGENS DO PRODUTO PRINCIPAL-->
            <div class="sixteen wide mobile @(Model.SKUs != null ? "seven" : "nine") wide computer column" id="exibePartial">
                @Html.Partial("~/Views/Product/Details/_Slide.cshtml", Model.ProductImages.ToList())
            </div>
            <!-- COMEÇO IMAGENS DO PRODUTO PRINCIPAL-->
            <div class="ui divider hidden"></div>
            <!-- COMEÇO INFORMAÇÕES DO PRODUTO-->
            <div class="sixteen wide mobile @(Model.SKUs != null ? "nine" : "seven") wide computer column infoProduto">
                <div class="ui grid">
                    <div class="computer only row product information">
                        <div class="column">
                            <h1 itemprop="name" class="nomeProduto" id="produto-nome">@Model.Name</h1>
                            @if (@Model.Brand != null)
                            {
                                <h5 itemprop="productBrand" class="marcaProduto">@Model.Brand.Name</h5>
                            }
                            else
                            {
                                <h5 itemprop="productBrand" class="marcaProduto"></h5>
                            }

                            <div class="ui two column grid">
                                <div class="column">
                                    <h6 itemprop="productID" class="codProduto">@Model.Code</h6>
                                </div>
                                <div class="column">
                                    <div class="avaliacoes">
                                        <div class="ui tiny star rating" data-rating="@Model.Rate.Value.ToString().Replace(",", ".")"></div>
                                        @(Model.ProductRatings != null ? Model.ProductRatings.Count() : 0) avaliações
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--COMEÇO DICA DE COMPRA-->
                    <div id="dica_compra_partial">
                        @Html.Action("buyingTips", "product", new { productID = @Model.IdProduct, skuID = Model.SKUPadrao != null ? Model.SKUPadrao.IdSku : 0 })
                    </div>
                    <!--FIM DICA DE COMPRA-->
                    @Html.Partial("~/Views/Product/Details/_FlagDiscount.cshtml", Model)
                    <!--GRADE B2B-->
                    @if (Model.SKUs != null)
                    {
                        @Html.Partial("~/Views/Product/Details/_GradeSkuB2B.cshtml", Model, new ViewDataDictionary { { "useOneCLick", usaOneClick } })
                    }
                    else
                    {
                        @Html.Partial("~/Views/Product/Details/_GradeSemSkuB2B.cshtml", Model, new ViewDataDictionary { { "useOneCLick", usaOneClick } })
                    }
                    <!-- GRADE B2B-->
                    <!-- COMEÇO SIMULADOR FRETE-->
                    <div class="row product-grid">
                        <div class="column">
                            <div id="grade_sku" class="ui middle aligned grid blue segment">
                                <div class="ui grid">
                                    <div class="row stackable three column">
                                        <div class="column middle aligned">
                                            <span>Calcular frete e prazo</span>
                                        </div>
                                        <div class="column">
                                            <div class="ui input">
                                                <input type="text" name="simular-frete-cep" id="simular-frete-cep" placeholder="00000-000">
                                            </div>
                                        </div>
                                        <div class="column">
                                            <button name="simular-frete-submit" id="simular-frete-submit" class="ui button primary">OK</button>
                                        </div>
                                    </div>
                                    <div class="row stackable two column div-frete-retira-detalhes" style="display: none">
                                        <div class="column">
                                            <button name="frete-receber-detalhes" id="frete-receber-detalhes" class="ui button fs basic">Receber</button>
                                            <button name="frete-retirar-detalhes" id="frete-retirar-detalhes" class="ui button sc basic">Retirar</button>
                                        </div>
                                        <input type="hidden" id="hdnRetirarDetalhes" value="false" />
                                    </div>
                                </div>
                                <div class="ui divider"></div>
                                <table class="ui very basic table">
                                    <thead id="listHeadSimulateFreight"></thead>
                                    <tbody id="listSimulateFreight">
                                        <tr><td colspan="3" class="center aligned">Digite um CEP e clique no botão OK.</td></tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <!-- FIM SIMULADOR FRETE-->
                </div>

            </div>
            <!-- FIM INFORMAÇÕES DO PRODUTO-->
        </div>

        <div class="ui divider hidden"></div>
        <!--COMEÇO DESCRIÇÃO-->
        <div class="row">
            <div class="ui top attached secondary pointing stackable menu tabular">
                <a class="item active" data-tab="informacoes">Informações Básicas</a>
                <a class="item" data-tab="detalhes">Características do Produto </a>
                <a class="item" data-tab="avaliacoes">Avaliações</a>
            </div>
            <div class="ui bottom attached tab segment basic active " data-tab="informacoes">
                @Html.Raw(Model.DescriptionDetailSummary)
            </div>
            <!--COMEÇO DETALHES PRODUTO-->
            <div class="ui bottom attached tab segment basic" data-tab="detalhes" id="detalhes">
                <div class="ui grid one column">
                    <div class="column">
                        @Html.Raw(@Model.DescriptionDetail)
                        @Html.Raw(@Model.DescriptionDetailAdditionalTwo)
                        @Html.Raw(@Model.DescriptionDetailAdditionalThree)
                        @Html.Raw(@Model.DescriptionDetailAdditionalFour)
                    </div>
                    @if (Model.Attributes != null && Model.Attributes.Count() > 0)
                    {
                        <div class="column">
                            <h4>Informações Adicionais do Produto</h4>
                            @foreach (var atribute in Model.Attributes)
                            {
                                var attrValues = "";
                                <p>
                                    <strong>@atribute.name: </strong>
                                    @foreach (var valor in atribute.attributeValues)
                                    {
                                        if (valor.active)
                                        {
                                            attrValues = attrValues != "" ? attrValues + "," + @valor.Value : @valor.Value;
                                        }
                                    }
                                    @attrValues
                                </p>
                            }
                        </div>
                    }
                </div>
            </div>
            <!--FIM DETALHES PRODUTO-->
            <div class="ui bottom attached tab segment basic" data-tab="avaliacoes" id="avaliacoes">
                <div class="ui grid">
                    <div class="row two column horizontal divided stackable">
                        <!-- COMEÇO AVALIAÇÂO-->
                        <div class="column">
                            <div class="ui comments fluid" id="lista_avaliacoes">
                                @if (Model.ProductRatings != null)
                                {
                                    int total = Model.ProductRatings.Count > 5 ? 5 : Model.ProductRatings.Count;
                                    for (int i = 0; i < total; i++)
                                    {
                                        <div class="comment">
                                            <div class="content">
                                                <a class="author">@Model.ProductRatings[i].Name</a>
                                                <div class="metadata">
                                                    <div class="rating">
                                                        <div class="ui mini star rating" data-rating="@Model.ProductRatings[i].Rate"></div>
                                                    </div>
                                                    <div class="date"></div>
                                                    @if (Model.ProductRatings[i].LeavePublicEmail == true)
                                                    {
                                                        <div class="email">@Model.ProductRatings[i].Email</div>
                                                    }
                                                    else
                                                    {
                                                        <div class="email"></div>
                                                    }
                                                    <div class="date">@Model.ProductRatings[i].DateRegister</div>
                                                    <div class="address">@Model.ProductRatings[i].AddressCity</div>
                                                </div>
                                                <div class="text">
                                                    <h5>@Model.ProductRatings[i].Title</h5>
                                                    <p>@Model.ProductRatings[i].Comment</p>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="ui divider"></div>
                                    }

                                }
                            </div>
                            @if (Model.ProductRatings != null && Model.ProductRatings.Count > 5)
                            {
                                <div class="ui button teal tiny right icon" id="btn_carregar_avaliacoes">
                                    <i class="icon refresh"></i>
                                    Carregar mais avaliações
                                </div>
                            }
                        </div>
                        <!-- FIM AVALIAÇÂO-->
                        <!-- COMEÇO FOMULÁRIO DE AVALIAÇÂO-->
                        <div class="column">
                            <form class="ui form" id="avaliar">
                                <div class="field required">
                                    <label>Nome</label>
                                    <input type="text" name="Name" maxlength="100" placeholder="Nome" id="Name" required>
                                </div>
                                <div class="field required">
                                    <label>E-mail</label>
                                    <input type="text" name="email" maxlength="100" placeholder="Email" id="Email" required>
                                </div>
                                <div class="two fields">
                                    <div class="field required" data-jet-revel="true">
                                        <label>Cidade</label>
                                        <div class="ui input">
                                            <input type="text" maxlength="100" name="AddressCity" placeholder="Cidade" id="cidade" required>
                                        </div>
                                    </div>
                                    <div class="field required">
                                        <label>Estado</label>
                                        <select class="ui dropdown search" id="estado_0" name="AddressState">
                                            <option value="">Selecione</option>
                                            <option value="AC">Acre</option>
                                            <option value="AL">Alagoas</option>
                                            <option value="AP">Amapá</option>
                                            <option value="AM">Amazonas</option>
                                            <option value="BA">Bahia</option>
                                            <option value="CE">Ceará</option>
                                            <option value="DF">Distrito Federal</option>
                                            <option value="ES">Espírito Santo</option>
                                            <option value="GO">Goiás</option>
                                            <option value="MA">Maranhão</option>
                                            <option value="MT">Mato Grosso</option>
                                            <option value="MS">Mato Grosso do Sul</option>
                                            <option value="MG">Minas Gerais</option>
                                            <option value="PA">Pará</option>
                                            <option value="PB">Paraíba</option>
                                            <option value="PR">Paraná</option>
                                            <option value="PE">Pernambuco</option>
                                            <option value="PI">Piauí</option>
                                            <option value="RJ">Rio de Janeiro</option>
                                            <option value="RN">Rio Grande do Norte</option>
                                            <option value="RS">Rio Grande do Sul</option>
                                            <option value="RO">Rondônia</option>
                                            <option value="RR">Roraima</option>
                                            <option value="SC">Santa Catarina</option>
                                            <option value="SP">São Paulo</option>
                                            <option value="SE">Sergipe</option>
                                            <option value="TO">Tocantins</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="field required" id="rating_st">
                                    <label>Nota</label>
                                    <div class="ui huge star rating" data-value="5" data-rating="5" data-max-rating="5"></div>
                                </div>
                                <div class="field required">
                                    <label>Título</label>
                                    <input type="text" name="Title" maxlength="200" placeholder="Titulo" id="Title">
                                </div>
                                <div class="field required">
                                    <label>Opinião</label>
                                    <textarea id="Comment" maxlength="1000" name="Comment"></textarea>
                                </div>
                                <div class="field">
                                    <div class="ui checkbox" id="ViewEmailCheck">
                                        <input type="checkbox" tabindex="0" class="hidden" name="ViewEmail" id="ViewEmail">
                                        <label>Mostrar Email?</label>
                                    </div>
                                </div>
                                <input type="hidden" name="Rate" id="Rate" value="5" />
                                @Html.Action("getRecaptchaV3", "company", new { Module = "Evaluation" })
                                <br />
                                <button class="ui button btn-avaliar" type="button" id="submitAval">Enviar</button>
                            </form>
                        </div>
                        <!-- FIM FOMULÁRIO DE AVALIAÇÂO-->
                    </div>
                </div>
            </div>
        </div>
        <!--FIM DESCRIÇÃO-->
    </div>
</div>
